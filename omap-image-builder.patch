diff --git a/scripts/install_dependencies.sh b/scripts/install_dependencies.sh
index ebe22455..44fccdbb 100755
--- a/scripts/install_dependencies.sh
+++ b/scripts/install_dependencies.sh
@@ -33,7 +33,7 @@ debootstrap_is_installed () {
 		if [ "x${host_arch}" != "xaarch64" ] ; then
 			echo "QEMU is un-reliable, thus no longer supported... Spend some Money and buy a real ARMHF device to run this script."
 			#FIXME: comment out the next line to use QEMU
-			exit 2
+			#exit 2
 			dpkg -l | grep qemu-user-static >/dev/null || deb_pkgs="${deb_pkgs}qemu-user-static "
 			dpkg -l | grep $(dpkg --print-architecture) | grep -v "qemu-" | grep qemu >/dev/null || deb_pkgs="${deb_pkgs}qemu "
 		fi
diff --git a/tools/setup_sdcard.sh b/tools/setup_sdcard.sh
index ffed9126..2c20a6c2 100755
--- a/tools/setup_sdcard.sh
+++ b/tools/setup_sdcard.sh
@@ -1295,7 +1295,7 @@ populate_rootfs () {
 		fi
 	fi
 
-	cmdline="coherent_pool=1M net.ifnames=0 quiet"
+	cmdline="coherent_pool=1M net.ifnames=0 quiet security=apparmor"
 	if [ "x${enable_cape_universal}" = "xenable" ] ; then
 		cmdline="${cmdline} cape_universal=enable"
 	fi
@@ -1436,7 +1436,7 @@ populate_rootfs () {
 			if [ "${BTRFS_FSTAB}" ] ; then
 				echo "${rootfs_drive}  /  btrfs  defaults,noatime  0  1" >> ${wfile}
 			else
-				echo "${rootfs_drive}  /  ${ROOTFS_TYPE}  noatime,errors=remount-ro  0  1" >> ${wfile}
+				echo "${rootfs_drive}  /  ${ROOTFS_TYPE}  noatime,errors=remount-ro,usrquota,grpquota 0 1" >> ${wfile}
 			fi
 		fi
 
@@ -1445,6 +1445,7 @@ populate_rootfs () {
 		fi
 
 		echo "debugfs  /sys/kernel/debug  debugfs  defaults  0  0" >> ${wfile}
+		echo "/swapfile swap swap defaults 0 0" >> ${wfile}
 
 		if [ "x${DISABLE_ETH}" != "xskip" ] ; then
 			wfile="${TEMPDIR}/disk/etc/network/interfaces"
@@ -1458,29 +1459,8 @@ populate_rootfs () {
 				echo "" >> ${wfile}
 				echo "# The primary network interface" >> ${wfile}
 
-				if [ "${DISABLE_ETH}" ] ; then
-					echo "#auto eth0" >> ${wfile}
-					echo "#iface eth0 inet dhcp" >> ${wfile}
-				else
-					echo "auto eth0"  >> ${wfile}
-					echo "iface eth0 inet dhcp" >> ${wfile}
-				fi
-
-				#if we have systemd & wicd-gtk, disable eth0 in /etc/network/interfaces
-				if [ -f ${TEMPDIR}/disk/lib/systemd/systemd ] ; then
-					if [ -f ${TEMPDIR}/disk/usr/bin/wicd-gtk ] ; then
-						sed -i 's/auto eth0/#auto eth0/g' ${wfile}
-						sed -i 's/allow-hotplug eth0/#allow-hotplug eth0/g' ${wfile}
-						sed -i 's/iface eth0 inet dhcp/#iface eth0 inet dhcp/g' ${wfile}
-					fi
-				fi
-
-				#if we have connman, disable eth0 in /etc/network/interfaces
-				if [ -f ${TEMPDIR}/disk/etc/init.d/connman ] ; then
-					sed -i 's/auto eth0/#auto eth0/g' ${wfile}
-					sed -i 's/allow-hotplug eth0/#allow-hotplug eth0/g' ${wfile}
-					sed -i 's/iface eth0 inet dhcp/#iface eth0 inet dhcp/g' ${wfile}
-				fi
+				echo "auto eth0"  >> ${wfile}
+				echo "iface eth0 inet dhcp" >> ${wfile}
 
 				echo "# Example to keep MAC address between reboots" >> ${wfile}
 				echo "#hwaddress ether DE:AD:BE:EF:CA:FE" >> ${wfile}
